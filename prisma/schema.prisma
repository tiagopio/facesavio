generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  username  String   @unique
  name      String
  imageUrl  String?
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  followers Follow[] @relation("Following")
  following Follow[] @relation("Follower")
  likes     Like[]   @relation("UserLikes")
  posts     Post[]
}

model Follow {
  userId      String
  followingId String
  following   User   @relation("Following", fields: [followingId], references: [id], onDelete: Cascade)
  user        User   @relation("Follower", fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, followingId])
}

model Post {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  title     String
  body      String?
  userId    String
  likes     Like[]   @relation("PostLikes")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Like {
  userId    String
  postId    String
  viewed    Boolean  @default(false)
  createdAt DateTime @default(now())
  post      Post     @relation("PostLikes", fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation("UserLikes", fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, postId])
  @@index([postId])
}

model health_check {
  id         Int       @id @default(autoincrement())
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
}
